name: Frontend Deploy (No Docker)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: package-lock.json
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      
    - name: Upload build to releases
      uses: actions/upload-artifact@v4
      with:
        name: frontend-dist
        path: dist/
        retention-days: 30
        
    # Option 1: Deploy to GitHub Pages
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      if: github.ref == 'refs/heads/main'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./dist
        
    # Option 2: Deploy to Netlify
    - name: Deploy to Netlify
      if: env.NETLIFY_AUTH_TOKEN != ''
      uses: nwtgck/actions-netlify@v2.0
      with:
        publish-dir: './dist'
        production-branch: main
        github-token: ${{ secrets.GITHUB_TOKEN }}
        deploy-message: "Deploy from GitHub Actions"
        enable-pull-request-comment: false
        enable-commit-comment: true
        overwrites-pull-request-comment: true
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        
    # Option 3: Deploy to Vercel
    - name: Deploy to Vercel
      if: env.VERCEL_TOKEN != ''
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.ORG_ID }}
        vercel-project-id: ${{ secrets.PROJECT_ID }}
        working-directory: ./
        
    # Option 4: Deploy to AWS S3 + CloudFront
    - name: Deploy to AWS S3
      if: env.AWS_ACCESS_KEY_ID != ''
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        
    - name: Upload to S3
      if: env.AWS_ACCESS_KEY_ID != ''
      run: |
        aws s3 sync dist/ s3://your-bucket/frontend/ --delete
        
    - name: Invalidate CloudFront
      if: env.AWS_ACCESS_KEY_ID != ''
      run: |
        aws cloudfront create-invalidation --distribution-id YOUR_DISTRIBUTION_ID --paths "/*"
        
    # Option 5: Deploy to Azure Static Web Apps
    - name: Deploy to Azure Static Web Apps
      if: env.AZURE_STATIC_WEB_APPS_API_TOKEN != ''
      uses: Azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        action: "upload"
        app_location: "/"
        output_location: "dist"
