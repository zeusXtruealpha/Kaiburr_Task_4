name: Backend Deploy (No Docker)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'
        cache: maven
        
    - name: Build application
      run: mvn -B clean package -DskipTests
      
    - name: Upload JAR to releases
      uses: actions/upload-artifact@v4
      with:
        name: backend-jar
        path: target/*.jar
        retention-days: 30
        
    # Option 1: Deploy to GitHub Releases
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Backend JAR file for Task Management System
          
          **Download**: backend-jar.zip
        draft: false
        prerelease: false
        
    # Option 2: Deploy to AWS S3 (if you have AWS credentials)
    - name: Deploy to AWS S3
      if: env.AWS_ACCESS_KEY_ID != ''
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        
    - name: Upload to S3
      if: env.AWS_ACCESS_KEY_ID != ''
      run: |
        aws s3 cp target/*.jar s3://your-bucket/backend/
        
    # Option 3: Deploy to Azure Storage (if you have Azure credentials)
    - name: Deploy to Azure Storage
      if: env.AZURE_STORAGE_ACCOUNT != ''
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az storage blob upload-batch \
            --source target/ \
            --destination backend \
            --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT }} \
            --account-key ${{ secrets.AZURE_STORAGE_KEY }}
            
    # Option 4: Deploy to Google Cloud Storage (if you have GCP credentials)
    - name: Deploy to GCS
      if: env.GOOGLE_APPLICATION_CREDENTIALS != ''
      uses: google-github-actions/upload-cloud-storage@v1
      with:
        path: target/*.jar
        destination: gs://your-bucket/backend/
        credentials: ${{ secrets.GCP_SA_KEY }}
